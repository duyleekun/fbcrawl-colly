// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.12.4
// source: fbcrawl.proto

package pb

import (
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type Empty struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *Empty) Reset() {
	*x = Empty{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fbcrawl_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Empty) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Empty) ProtoMessage() {}

func (x *Empty) ProtoReflect() protoreflect.Message {
	mi := &file_fbcrawl_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Empty.ProtoReflect.Descriptor instead.
func (*Empty) Descriptor() ([]byte, []int) {
	return file_fbcrawl_proto_rawDescGZIP(), []int{0}
}

type Pointer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Address int64 `protobuf:"varint,1,opt,name=address,proto3" json:"address,omitempty"`
}

func (x *Pointer) Reset() {
	*x = Pointer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fbcrawl_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Pointer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Pointer) ProtoMessage() {}

func (x *Pointer) ProtoReflect() protoreflect.Message {
	mi := &file_fbcrawl_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Pointer.ProtoReflect.Descriptor instead.
func (*Pointer) Descriptor() ([]byte, []int) {
	return file_fbcrawl_proto_rawDescGZIP(), []int{1}
}

func (x *Pointer) GetAddress() int64 {
	if x != nil {
		return x.Address
	}
	return 0
}

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pointer    *Pointer `protobuf:"bytes,1,opt,name=pointer,proto3" json:"pointer,omitempty"`
	Email      string   `protobuf:"bytes,2,opt,name=email,proto3" json:"email,omitempty"`
	Password   string   `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
	TotpSecret string   `protobuf:"bytes,4,opt,name=totp_secret,json=totpSecret,proto3" json:"totp_secret,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fbcrawl_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fbcrawl_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_fbcrawl_proto_rawDescGZIP(), []int{2}
}

func (x *LoginRequest) GetPointer() *Pointer {
	if x != nil {
		return x.Pointer
	}
	return nil
}

func (x *LoginRequest) GetEmail() string {
	if x != nil {
		return x.Email
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *LoginRequest) GetTotpSecret() string {
	if x != nil {
		return x.TotpSecret
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Cookies string `protobuf:"bytes,1,opt,name=cookies,proto3" json:"cookies,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fbcrawl_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_fbcrawl_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_fbcrawl_proto_rawDescGZIP(), []int{3}
}

func (x *LoginResponse) GetCookies() string {
	if x != nil {
		return x.Cookies
	}
	return ""
}

type LoginWithCookiesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pointer *Pointer `protobuf:"bytes,1,opt,name=pointer,proto3" json:"pointer,omitempty"`
	Cookies string   `protobuf:"bytes,2,opt,name=cookies,proto3" json:"cookies,omitempty"`
}

func (x *LoginWithCookiesRequest) Reset() {
	*x = LoginWithCookiesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fbcrawl_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginWithCookiesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginWithCookiesRequest) ProtoMessage() {}

func (x *LoginWithCookiesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fbcrawl_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginWithCookiesRequest.ProtoReflect.Descriptor instead.
func (*LoginWithCookiesRequest) Descriptor() ([]byte, []int) {
	return file_fbcrawl_proto_rawDescGZIP(), []int{4}
}

func (x *LoginWithCookiesRequest) GetPointer() *Pointer {
	if x != nil {
		return x.Pointer
	}
	return nil
}

func (x *LoginWithCookiesRequest) GetCookies() string {
	if x != nil {
		return x.Cookies
	}
	return ""
}

type FetchGroupInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pointer       *Pointer `protobuf:"bytes,1,opt,name=pointer,proto3" json:"pointer,omitempty"`
	GroupUsername string   `protobuf:"bytes,2,opt,name=group_username,json=groupUsername,proto3" json:"group_username,omitempty"`
}

func (x *FetchGroupInfoRequest) Reset() {
	*x = FetchGroupInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fbcrawl_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchGroupInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchGroupInfoRequest) ProtoMessage() {}

func (x *FetchGroupInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fbcrawl_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchGroupInfoRequest.ProtoReflect.Descriptor instead.
func (*FetchGroupInfoRequest) Descriptor() ([]byte, []int) {
	return file_fbcrawl_proto_rawDescGZIP(), []int{5}
}

func (x *FetchGroupInfoRequest) GetPointer() *Pointer {
	if x != nil {
		return x.Pointer
	}
	return nil
}

func (x *FetchGroupInfoRequest) GetGroupUsername() string {
	if x != nil {
		return x.GroupUsername
	}
	return ""
}

type FetchGroupFeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pointer    *Pointer `protobuf:"bytes,1,opt,name=pointer,proto3" json:"pointer,omitempty"`
	GroupId    int64    `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	NextCursor string   `protobuf:"bytes,3,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
}

func (x *FetchGroupFeedRequest) Reset() {
	*x = FetchGroupFeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fbcrawl_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchGroupFeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchGroupFeedRequest) ProtoMessage() {}

func (x *FetchGroupFeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fbcrawl_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchGroupFeedRequest.ProtoReflect.Descriptor instead.
func (*FetchGroupFeedRequest) Descriptor() ([]byte, []int) {
	return file_fbcrawl_proto_rawDescGZIP(), []int{6}
}

func (x *FetchGroupFeedRequest) GetPointer() *Pointer {
	if x != nil {
		return x.Pointer
	}
	return nil
}

func (x *FetchGroupFeedRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *FetchGroupFeedRequest) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type FetchPostRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pointer           *Pointer `protobuf:"bytes,1,opt,name=pointer,proto3" json:"pointer,omitempty"`
	GroupId           int64    `protobuf:"varint,2,opt,name=group_id,json=groupId,proto3" json:"group_id,omitempty"`
	PostId            int64    `protobuf:"varint,3,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	CommentNextCursor string   `protobuf:"bytes,4,opt,name=comment_next_cursor,json=commentNextCursor,proto3" json:"comment_next_cursor,omitempty"`
}

func (x *FetchPostRequest) Reset() {
	*x = FetchPostRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fbcrawl_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchPostRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchPostRequest) ProtoMessage() {}

func (x *FetchPostRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fbcrawl_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchPostRequest.ProtoReflect.Descriptor instead.
func (*FetchPostRequest) Descriptor() ([]byte, []int) {
	return file_fbcrawl_proto_rawDescGZIP(), []int{7}
}

func (x *FetchPostRequest) GetPointer() *Pointer {
	if x != nil {
		return x.Pointer
	}
	return nil
}

func (x *FetchPostRequest) GetGroupId() int64 {
	if x != nil {
		return x.GroupId
	}
	return 0
}

func (x *FetchPostRequest) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *FetchPostRequest) GetCommentNextCursor() string {
	if x != nil {
		return x.CommentNextCursor
	}
	return ""
}

type FetchContentImagesRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pointer    *Pointer `protobuf:"bytes,1,opt,name=pointer,proto3" json:"pointer,omitempty"`
	PostId     int64    `protobuf:"varint,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
	NextCursor string   `protobuf:"bytes,3,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
}

func (x *FetchContentImagesRequest) Reset() {
	*x = FetchContentImagesRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fbcrawl_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchContentImagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchContentImagesRequest) ProtoMessage() {}

func (x *FetchContentImagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fbcrawl_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchContentImagesRequest.ProtoReflect.Descriptor instead.
func (*FetchContentImagesRequest) Descriptor() ([]byte, []int) {
	return file_fbcrawl_proto_rawDescGZIP(), []int{8}
}

func (x *FetchContentImagesRequest) GetPointer() *Pointer {
	if x != nil {
		return x.Pointer
	}
	return nil
}

func (x *FetchContentImagesRequest) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *FetchContentImagesRequest) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type FetchImageUrlRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Pointer *Pointer `protobuf:"bytes,1,opt,name=pointer,proto3" json:"pointer,omitempty"`
	ImageId int64    `protobuf:"varint,2,opt,name=image_id,json=imageId,proto3" json:"image_id,omitempty"`
}

func (x *FetchImageUrlRequest) Reset() {
	*x = FetchImageUrlRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fbcrawl_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FetchImageUrlRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchImageUrlRequest) ProtoMessage() {}

func (x *FetchImageUrlRequest) ProtoReflect() protoreflect.Message {
	mi := &file_fbcrawl_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchImageUrlRequest.ProtoReflect.Descriptor instead.
func (*FetchImageUrlRequest) Descriptor() ([]byte, []int) {
	return file_fbcrawl_proto_rawDescGZIP(), []int{9}
}

func (x *FetchImageUrlRequest) GetPointer() *Pointer {
	if x != nil {
		return x.Pointer
	}
	return nil
}

func (x *FetchImageUrlRequest) GetImageId() int64 {
	if x != nil {
		return x.ImageId
	}
	return 0
}

// The request message containing the user's name.
type FacebookGroup struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name        string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	MemberCount int64  `protobuf:"varint,3,opt,name=member_count,json=memberCount,proto3" json:"member_count,omitempty"`
}

func (x *FacebookGroup) Reset() {
	*x = FacebookGroup{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fbcrawl_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookGroup) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookGroup) ProtoMessage() {}

func (x *FacebookGroup) ProtoReflect() protoreflect.Message {
	mi := &file_fbcrawl_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookGroup.ProtoReflect.Descriptor instead.
func (*FacebookGroup) Descriptor() ([]byte, []int) {
	return file_fbcrawl_proto_rawDescGZIP(), []int{10}
}

func (x *FacebookGroup) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FacebookGroup) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *FacebookGroup) GetMemberCount() int64 {
	if x != nil {
		return x.MemberCount
	}
	return 0
}

type FacebookUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id   int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
}

func (x *FacebookUser) Reset() {
	*x = FacebookUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fbcrawl_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookUser) ProtoMessage() {}

func (x *FacebookUser) ProtoReflect() protoreflect.Message {
	mi := &file_fbcrawl_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookUser.ProtoReflect.Descriptor instead.
func (*FacebookUser) Descriptor() ([]byte, []int) {
	return file_fbcrawl_proto_rawDescGZIP(), []int{11}
}

func (x *FacebookUser) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FacebookUser) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

type FacebookPost struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id            int64            `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Group         *FacebookGroup   `protobuf:"bytes,2,opt,name=group,proto3" json:"group,omitempty"`
	User          *FacebookUser    `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Content       string           `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	Comments      *CommentList     `protobuf:"bytes,5,opt,name=comments,proto3" json:"comments,omitempty"`
	ContentLink   string           `protobuf:"bytes,6,opt,name=content_link,json=contentLink,proto3" json:"content_link,omitempty"`
	ContentImages []*FacebookImage `protobuf:"bytes,7,rep,name=content_images,json=contentImages,proto3" json:"content_images,omitempty"`
	ContentImage  *FacebookImage   `protobuf:"bytes,8,opt,name=content_image,json=contentImage,proto3" json:"content_image,omitempty"`
	CreatedAt     int64            `protobuf:"varint,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ReactionCount int64            `protobuf:"varint,10,opt,name=reaction_count,json=reactionCount,proto3" json:"reaction_count,omitempty"`
	CommentCount  int64            `protobuf:"varint,11,opt,name=comment_count,json=commentCount,proto3" json:"comment_count,omitempty"`
}

func (x *FacebookPost) Reset() {
	*x = FacebookPost{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fbcrawl_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookPost) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookPost) ProtoMessage() {}

func (x *FacebookPost) ProtoReflect() protoreflect.Message {
	mi := &file_fbcrawl_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookPost.ProtoReflect.Descriptor instead.
func (*FacebookPost) Descriptor() ([]byte, []int) {
	return file_fbcrawl_proto_rawDescGZIP(), []int{12}
}

func (x *FacebookPost) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FacebookPost) GetGroup() *FacebookGroup {
	if x != nil {
		return x.Group
	}
	return nil
}

func (x *FacebookPost) GetUser() *FacebookUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *FacebookPost) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *FacebookPost) GetComments() *CommentList {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *FacebookPost) GetContentLink() string {
	if x != nil {
		return x.ContentLink
	}
	return ""
}

func (x *FacebookPost) GetContentImages() []*FacebookImage {
	if x != nil {
		return x.ContentImages
	}
	return nil
}

func (x *FacebookPost) GetContentImage() *FacebookImage {
	if x != nil {
		return x.ContentImage
	}
	return nil
}

func (x *FacebookPost) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *FacebookPost) GetReactionCount() int64 {
	if x != nil {
		return x.ReactionCount
	}
	return 0
}

func (x *FacebookPost) GetCommentCount() int64 {
	if x != nil {
		return x.CommentCount
	}
	return 0
}

type CommentList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Comments   []*FacebookComment `protobuf:"bytes,5,rep,name=comments,proto3" json:"comments,omitempty"`
	NextCursor string             `protobuf:"bytes,12,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
}

func (x *CommentList) Reset() {
	*x = CommentList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fbcrawl_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentList) ProtoMessage() {}

func (x *CommentList) ProtoReflect() protoreflect.Message {
	mi := &file_fbcrawl_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentList.ProtoReflect.Descriptor instead.
func (*CommentList) Descriptor() ([]byte, []int) {
	return file_fbcrawl_proto_rawDescGZIP(), []int{13}
}

func (x *CommentList) GetComments() []*FacebookComment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *CommentList) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type FacebookImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id  int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Url string `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
}

func (x *FacebookImage) Reset() {
	*x = FacebookImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fbcrawl_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookImage) ProtoMessage() {}

func (x *FacebookImage) ProtoReflect() protoreflect.Message {
	mi := &file_fbcrawl_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookImage.ProtoReflect.Descriptor instead.
func (*FacebookImage) Descriptor() ([]byte, []int) {
	return file_fbcrawl_proto_rawDescGZIP(), []int{14}
}

func (x *FacebookImage) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FacebookImage) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type FacebookComment struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64         `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Post      *FacebookPost `protobuf:"bytes,2,opt,name=post,proto3" json:"post,omitempty"`
	User      *FacebookUser `protobuf:"bytes,3,opt,name=user,proto3" json:"user,omitempty"`
	Content   string        `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`
	CreatedAt int64         `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
}

func (x *FacebookComment) Reset() {
	*x = FacebookComment{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fbcrawl_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookComment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookComment) ProtoMessage() {}

func (x *FacebookComment) ProtoReflect() protoreflect.Message {
	mi := &file_fbcrawl_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookComment.ProtoReflect.Descriptor instead.
func (*FacebookComment) Descriptor() ([]byte, []int) {
	return file_fbcrawl_proto_rawDescGZIP(), []int{15}
}

func (x *FacebookComment) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *FacebookComment) GetPost() *FacebookPost {
	if x != nil {
		return x.Post
	}
	return nil
}

func (x *FacebookComment) GetUser() *FacebookUser {
	if x != nil {
		return x.User
	}
	return nil
}

func (x *FacebookComment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *FacebookComment) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

type FacebookPostList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Posts      []*FacebookPost `protobuf:"bytes,1,rep,name=posts,proto3" json:"posts,omitempty"`
	NextCursor string          `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
}

func (x *FacebookPostList) Reset() {
	*x = FacebookPostList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fbcrawl_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookPostList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookPostList) ProtoMessage() {}

func (x *FacebookPostList) ProtoReflect() protoreflect.Message {
	mi := &file_fbcrawl_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookPostList.ProtoReflect.Descriptor instead.
func (*FacebookPostList) Descriptor() ([]byte, []int) {
	return file_fbcrawl_proto_rawDescGZIP(), []int{16}
}

func (x *FacebookPostList) GetPosts() []*FacebookPost {
	if x != nil {
		return x.Posts
	}
	return nil
}

func (x *FacebookPostList) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

type FacebookImageList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Images     []*FacebookImage `protobuf:"bytes,1,rep,name=images,proto3" json:"images,omitempty"`
	NextCursor string           `protobuf:"bytes,2,opt,name=next_cursor,json=nextCursor,proto3" json:"next_cursor,omitempty"`
}

func (x *FacebookImageList) Reset() {
	*x = FacebookImageList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_fbcrawl_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FacebookImageList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FacebookImageList) ProtoMessage() {}

func (x *FacebookImageList) ProtoReflect() protoreflect.Message {
	mi := &file_fbcrawl_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FacebookImageList.ProtoReflect.Descriptor instead.
func (*FacebookImageList) Descriptor() ([]byte, []int) {
	return file_fbcrawl_proto_rawDescGZIP(), []int{17}
}

func (x *FacebookImageList) GetImages() []*FacebookImage {
	if x != nil {
		return x.Images
	}
	return nil
}

func (x *FacebookImageList) GetNextCursor() string {
	if x != nil {
		return x.NextCursor
	}
	return ""
}

var File_fbcrawl_proto protoreflect.FileDescriptor

var file_fbcrawl_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x0d, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x22, 0x07,
	0x0a, 0x05, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x23, 0x0a, 0x07, 0x50, 0x6f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x22, 0x93, 0x01, 0x0a,
	0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a,
	0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72,
	0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x70, 0x5f, 0x73, 0x65, 0x63, 0x72, 0x65, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x70, 0x53, 0x65, 0x63, 0x72,
	0x65, 0x74, 0x22, 0x29, 0x0a, 0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x22, 0x65, 0x0a,
	0x17, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65,
	0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x70, 0x6f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x62, 0x63, 0x72,
	0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65,
	0x72, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6f,
	0x6b, 0x69, 0x65, 0x73, 0x22, 0x70, 0x0a, 0x15, 0x46, 0x65, 0x74, 0x63, 0x68, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a,
	0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16,
	0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x50,
	0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12,
	0x25, 0x0a, 0x0e, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x55, 0x73,
	0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x15, 0x46, 0x65, 0x74, 0x63, 0x68,
	0x47, 0x72, 0x6f, 0x75, 0x70, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x30, 0x0a, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x16, 0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c,
	0x79, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64, 0x12, 0x1f, 0x0a,
	0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0xa8,
	0x01, 0x0a, 0x10, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63,
	0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6f,
	0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a, 0x08, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x5f, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x64,
	0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x2e, 0x0a, 0x13, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4e,
	0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x87, 0x01, 0x0a, 0x19, 0x46, 0x65,
	0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74,
	0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66, 0x62, 0x63, 0x72, 0x61,
	0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72,
	0x52, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73,
	0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74,
	0x49, 0x64, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72,
	0x73, 0x6f, 0x72, 0x22, 0x63, 0x0a, 0x14, 0x46, 0x65, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x70,
	0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x66,
	0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x50, 0x6f, 0x69,
	0x6e, 0x74, 0x65, 0x72, 0x52, 0x07, 0x70, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x12, 0x19, 0x0a,
	0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x07, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x0d, 0x46, 0x61, 0x63, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x21, 0x0a,
	0x0c, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0b, 0x6d, 0x65, 0x6d, 0x62, 0x65, 0x72, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x22, 0x32, 0x0a, 0x0c, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x55, 0x73, 0x65, 0x72,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x22, 0xeb, 0x03, 0x0a, 0x0c, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f,
	0x6b, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x32, 0x0a, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63,
	0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x52, 0x05, 0x67, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x2f, 0x0a, 0x04, 0x75, 0x73, 0x65,
	0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77,
	0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x36, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c,
	0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x73, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x21, 0x0a, 0x0c,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12,
	0x43, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65,
	0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77,
	0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b,
	0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x73, 0x12, 0x41, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x5f,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x66, 0x62,
	0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x46, 0x61, 0x63, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x72, 0x65, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d,
	0x72, 0x65, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x23, 0x0a,
	0x0d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75,
	0x6e, 0x74, 0x22, 0x6a, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73,
	0x74, 0x12, 0x3a, 0x0a, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x05, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f,
	0x6c, 0x6c, 0x79, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x08, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x1f, 0x0a,
	0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x31,
	0x0a, 0x0d, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72,
	0x6c, 0x22, 0xbc, 0x01, 0x0a, 0x0f, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x2f, 0x0a, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f,
	0x6c, 0x6c, 0x79, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x04, 0x70, 0x6f, 0x73, 0x74, 0x12, 0x2f, 0x0a, 0x04, 0x75, 0x73, 0x65, 0x72, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63,
	0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x04, 0x75, 0x73, 0x65, 0x72, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e,
	0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x22, 0x66, 0x0a, 0x10, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x6f, 0x73, 0x74,
	0x4c, 0x69, 0x73, 0x74, 0x12, 0x31, 0x0a, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f,
	0x6c, 0x6c, 0x79, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x6f, 0x73, 0x74,
	0x52, 0x05, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x63, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65,
	0x78, 0x74, 0x43, 0x75, 0x72, 0x73, 0x6f, 0x72, 0x22, 0x6a, 0x0a, 0x11, 0x46, 0x61, 0x63, 0x65,
	0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x34, 0x0a,
	0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e,
	0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x46, 0x61,
	0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x06, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x5f, 0x63, 0x75, 0x72, 0x73,
	0x6f, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x65, 0x78, 0x74, 0x43, 0x75,
	0x72, 0x73, 0x6f, 0x72, 0x32, 0xcf, 0x05, 0x0a, 0x04, 0x47, 0x72, 0x70, 0x63, 0x12, 0x36, 0x0a,
	0x04, 0x49, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f,
	0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e, 0x66, 0x62,
	0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x50, 0x6f, 0x69, 0x6e,
	0x74, 0x65, 0x72, 0x22, 0x00, 0x12, 0x3b, 0x0a, 0x09, 0x46, 0x72, 0x65, 0x65, 0x43, 0x6f, 0x6c,
	0x6c, 0x79, 0x12, 0x16, 0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c,
	0x6c, 0x79, 0x2e, 0x50, 0x6f, 0x69, 0x6e, 0x74, 0x65, 0x72, 0x1a, 0x14, 0x2e, 0x66, 0x62, 0x63,
	0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x44, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12, 0x1b, 0x2e, 0x66, 0x62,
	0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x66, 0x62, 0x63, 0x72, 0x61,
	0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x52, 0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x12, 0x26, 0x2e, 0x66,
	0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x57, 0x69, 0x74, 0x68, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x14, 0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63,
	0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x56, 0x0a, 0x0e,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24,
	0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x46,
	0x65, 0x74, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63,
	0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x0e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x47, 0x72, 0x6f,
	0x75, 0x70, 0x46, 0x65, 0x65, 0x64, 0x12, 0x24, 0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c,
	0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x47, 0x72, 0x6f, 0x75,
	0x70, 0x46, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x2e, 0x66,
	0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x46, 0x61, 0x63,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x6f, 0x73, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12,
	0x4b, 0x0a, 0x09, 0x46, 0x65, 0x74, 0x63, 0x68, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x1f, 0x2e, 0x66,
	0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x46, 0x65, 0x74,
	0x63, 0x68, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e,
	0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x46, 0x61,
	0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x50, 0x6f, 0x73, 0x74, 0x22, 0x00, 0x12, 0x62, 0x0a, 0x12,
	0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x28, 0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c,
	0x6c, 0x79, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x20, 0x2e, 0x66,
	0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x46, 0x61, 0x63,
	0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00,
	0x12, 0x54, 0x0a, 0x0d, 0x46, 0x65, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x23, 0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c, 0x5f, 0x63, 0x6f, 0x6c, 0x6c,
	0x79, 0x2e, 0x46, 0x65, 0x74, 0x63, 0x68, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x66, 0x62, 0x63, 0x72, 0x61, 0x77, 0x6c,
	0x5f, 0x63, 0x6f, 0x6c, 0x6c, 0x79, 0x2e, 0x46, 0x61, 0x63, 0x65, 0x62, 0x6f, 0x6f, 0x6b, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x22, 0x00, 0x42, 0x11, 0x5a, 0x0f, 0x2e, 0x2f, 0x66, 0x62, 0x63, 0x72,
	0x61, 0x77, 0x6c, 0x2f, 0x70, 0x62, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x33,
}

var (
	file_fbcrawl_proto_rawDescOnce sync.Once
	file_fbcrawl_proto_rawDescData = file_fbcrawl_proto_rawDesc
)

func file_fbcrawl_proto_rawDescGZIP() []byte {
	file_fbcrawl_proto_rawDescOnce.Do(func() {
		file_fbcrawl_proto_rawDescData = protoimpl.X.CompressGZIP(file_fbcrawl_proto_rawDescData)
	})
	return file_fbcrawl_proto_rawDescData
}

var file_fbcrawl_proto_msgTypes = make([]protoimpl.MessageInfo, 18)
var file_fbcrawl_proto_goTypes = []interface{}{
	(*Empty)(nil),                     // 0: fbcrawl_colly.Empty
	(*Pointer)(nil),                   // 1: fbcrawl_colly.Pointer
	(*LoginRequest)(nil),              // 2: fbcrawl_colly.LoginRequest
	(*LoginResponse)(nil),             // 3: fbcrawl_colly.LoginResponse
	(*LoginWithCookiesRequest)(nil),   // 4: fbcrawl_colly.LoginWithCookiesRequest
	(*FetchGroupInfoRequest)(nil),     // 5: fbcrawl_colly.FetchGroupInfoRequest
	(*FetchGroupFeedRequest)(nil),     // 6: fbcrawl_colly.FetchGroupFeedRequest
	(*FetchPostRequest)(nil),          // 7: fbcrawl_colly.FetchPostRequest
	(*FetchContentImagesRequest)(nil), // 8: fbcrawl_colly.FetchContentImagesRequest
	(*FetchImageUrlRequest)(nil),      // 9: fbcrawl_colly.FetchImageUrlRequest
	(*FacebookGroup)(nil),             // 10: fbcrawl_colly.FacebookGroup
	(*FacebookUser)(nil),              // 11: fbcrawl_colly.FacebookUser
	(*FacebookPost)(nil),              // 12: fbcrawl_colly.FacebookPost
	(*CommentList)(nil),               // 13: fbcrawl_colly.CommentList
	(*FacebookImage)(nil),             // 14: fbcrawl_colly.FacebookImage
	(*FacebookComment)(nil),           // 15: fbcrawl_colly.FacebookComment
	(*FacebookPostList)(nil),          // 16: fbcrawl_colly.FacebookPostList
	(*FacebookImageList)(nil),         // 17: fbcrawl_colly.FacebookImageList
}
var file_fbcrawl_proto_depIdxs = []int32{
	1,  // 0: fbcrawl_colly.LoginRequest.pointer:type_name -> fbcrawl_colly.Pointer
	1,  // 1: fbcrawl_colly.LoginWithCookiesRequest.pointer:type_name -> fbcrawl_colly.Pointer
	1,  // 2: fbcrawl_colly.FetchGroupInfoRequest.pointer:type_name -> fbcrawl_colly.Pointer
	1,  // 3: fbcrawl_colly.FetchGroupFeedRequest.pointer:type_name -> fbcrawl_colly.Pointer
	1,  // 4: fbcrawl_colly.FetchPostRequest.pointer:type_name -> fbcrawl_colly.Pointer
	1,  // 5: fbcrawl_colly.FetchContentImagesRequest.pointer:type_name -> fbcrawl_colly.Pointer
	1,  // 6: fbcrawl_colly.FetchImageUrlRequest.pointer:type_name -> fbcrawl_colly.Pointer
	10, // 7: fbcrawl_colly.FacebookPost.group:type_name -> fbcrawl_colly.FacebookGroup
	11, // 8: fbcrawl_colly.FacebookPost.user:type_name -> fbcrawl_colly.FacebookUser
	13, // 9: fbcrawl_colly.FacebookPost.comments:type_name -> fbcrawl_colly.CommentList
	14, // 10: fbcrawl_colly.FacebookPost.content_images:type_name -> fbcrawl_colly.FacebookImage
	14, // 11: fbcrawl_colly.FacebookPost.content_image:type_name -> fbcrawl_colly.FacebookImage
	15, // 12: fbcrawl_colly.CommentList.comments:type_name -> fbcrawl_colly.FacebookComment
	12, // 13: fbcrawl_colly.FacebookComment.post:type_name -> fbcrawl_colly.FacebookPost
	11, // 14: fbcrawl_colly.FacebookComment.user:type_name -> fbcrawl_colly.FacebookUser
	12, // 15: fbcrawl_colly.FacebookPostList.posts:type_name -> fbcrawl_colly.FacebookPost
	14, // 16: fbcrawl_colly.FacebookImageList.images:type_name -> fbcrawl_colly.FacebookImage
	0,  // 17: fbcrawl_colly.Grpc.Init:input_type -> fbcrawl_colly.Empty
	1,  // 18: fbcrawl_colly.Grpc.FreeColly:input_type -> fbcrawl_colly.Pointer
	2,  // 19: fbcrawl_colly.Grpc.Login:input_type -> fbcrawl_colly.LoginRequest
	4,  // 20: fbcrawl_colly.Grpc.LoginWithCookies:input_type -> fbcrawl_colly.LoginWithCookiesRequest
	5,  // 21: fbcrawl_colly.Grpc.FetchGroupInfo:input_type -> fbcrawl_colly.FetchGroupInfoRequest
	6,  // 22: fbcrawl_colly.Grpc.FetchGroupFeed:input_type -> fbcrawl_colly.FetchGroupFeedRequest
	7,  // 23: fbcrawl_colly.Grpc.FetchPost:input_type -> fbcrawl_colly.FetchPostRequest
	8,  // 24: fbcrawl_colly.Grpc.FetchContentImages:input_type -> fbcrawl_colly.FetchContentImagesRequest
	9,  // 25: fbcrawl_colly.Grpc.FetchImageUrl:input_type -> fbcrawl_colly.FetchImageUrlRequest
	1,  // 26: fbcrawl_colly.Grpc.Init:output_type -> fbcrawl_colly.Pointer
	0,  // 27: fbcrawl_colly.Grpc.FreeColly:output_type -> fbcrawl_colly.Empty
	3,  // 28: fbcrawl_colly.Grpc.Login:output_type -> fbcrawl_colly.LoginResponse
	0,  // 29: fbcrawl_colly.Grpc.LoginWithCookies:output_type -> fbcrawl_colly.Empty
	10, // 30: fbcrawl_colly.Grpc.FetchGroupInfo:output_type -> fbcrawl_colly.FacebookGroup
	16, // 31: fbcrawl_colly.Grpc.FetchGroupFeed:output_type -> fbcrawl_colly.FacebookPostList
	12, // 32: fbcrawl_colly.Grpc.FetchPost:output_type -> fbcrawl_colly.FacebookPost
	17, // 33: fbcrawl_colly.Grpc.FetchContentImages:output_type -> fbcrawl_colly.FacebookImageList
	14, // 34: fbcrawl_colly.Grpc.FetchImageUrl:output_type -> fbcrawl_colly.FacebookImage
	26, // [26:35] is the sub-list for method output_type
	17, // [17:26] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_fbcrawl_proto_init() }
func file_fbcrawl_proto_init() {
	if File_fbcrawl_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_fbcrawl_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Empty); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fbcrawl_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Pointer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fbcrawl_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fbcrawl_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fbcrawl_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginWithCookiesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fbcrawl_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchGroupInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fbcrawl_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchGroupFeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fbcrawl_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchPostRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fbcrawl_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchContentImagesRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fbcrawl_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FetchImageUrlRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fbcrawl_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacebookGroup); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fbcrawl_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacebookUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fbcrawl_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacebookPost); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fbcrawl_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fbcrawl_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacebookImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fbcrawl_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacebookComment); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fbcrawl_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacebookPostList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_fbcrawl_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FacebookImageList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_fbcrawl_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   18,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_fbcrawl_proto_goTypes,
		DependencyIndexes: file_fbcrawl_proto_depIdxs,
		MessageInfos:      file_fbcrawl_proto_msgTypes,
	}.Build()
	File_fbcrawl_proto = out.File
	file_fbcrawl_proto_rawDesc = nil
	file_fbcrawl_proto_goTypes = nil
	file_fbcrawl_proto_depIdxs = nil
}
